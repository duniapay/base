{
  "{\"sourceRoot\":\"/Users/name/dev/betting/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/name/dev/betting\",\"filename\":\"/Users/name/dev/betting/src/index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/name/dev/betting\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/name/dev/betting/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/name/dev/betting",
      "filename": "/Users/name/dev/betting/src/index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/name/dev/betting",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/name/dev/betting/src/index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/name/dev/betting/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/name/dev/betting/src/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nrequire(\"dotenv/config\");\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _models = _interopRequireDefault(require(\"./models\"));\n\nvar _routes = _interopRequireDefault(require(\"./routes\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])(); // * Application-Level Middleware * //\n// Third-Party Middleware\n\napp.use((0, _cors[\"default\"])()); // Built-In Middleware\n\napp.use(_express[\"default\"].json());\napp.use(_express[\"default\"].urlencoded({\n  extended: true\n})); // Custom Middleware\n\napp.use(function (req, res, next) {\n  req.context = {\n    models: _models[\"default\"],\n    me: _models[\"default\"].users[1]\n  };\n  next();\n}); /// \n\napp.use(function (req, res, next) {\n  res.header(\"Access-Control-Allow-Origin\", \"*\");\n  res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept, Authorization\");\n\n  if (req.method === 'OPTIONS') {\n    res.header('Access-Control-Allow-Methods', 'POST, PATCH, GET');\n    return res.status(203).json({});\n  }\n\n  next();\n}); // * Routes * //\n\napp.use('/transactions', _routes[\"default\"].transactions);\napp.use('/users', _routes[\"default\"].user); // * Start * //\n\napp.listen(process.env.PORT, function () {\n  return console.log(\"Server listening on port \".concat(process.env.PORT, \"!\"));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsInVzZSIsImV4cHJlc3MiLCJqc29uIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwicmVxIiwicmVzIiwibmV4dCIsImNvbnRleHQiLCJtb2RlbHMiLCJtZSIsInVzZXJzIiwiaGVhZGVyIiwibWV0aG9kIiwic3RhdHVzIiwicm91dGVzIiwidHJhbnNhY3Rpb25zIiwidXNlciIsImxpc3RlbiIsInByb2Nlc3MiLCJlbnYiLCJQT1JUIiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUlBLElBQU1BLEdBQUcsR0FBRywwQkFBWixDLENBRUE7QUFFQTs7QUFFQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsdUJBQVIsRSxDQUVBOztBQUVBRCxHQUFHLENBQUNDLEdBQUosQ0FBUUMsb0JBQVFDLElBQVIsRUFBUjtBQUNBSCxHQUFHLENBQUNDLEdBQUosQ0FBUUMsb0JBQVFFLFVBQVIsQ0FBbUI7QUFBRUMsRUFBQUEsUUFBUSxFQUFFO0FBQVosQ0FBbkIsQ0FBUixFLENBRUE7O0FBRUFMLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFVBQUNLLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEVBQW9CO0FBQ3hCRixFQUFBQSxHQUFHLENBQUNHLE9BQUosR0FBYztBQUNWQyxJQUFBQSxNQUFNLEVBQU5BLGtCQURVO0FBRVZDLElBQUFBLEVBQUUsRUFBRUQsbUJBQU9FLEtBQVAsQ0FBYSxDQUFiO0FBRk0sR0FBZDtBQUlBSixFQUFBQSxJQUFJO0FBQ1AsQ0FORCxFLENBWUE7O0FBRUFSLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFVBQUNLLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEVBQW9CO0FBQ3hCRCxFQUFBQSxHQUFHLENBQUNNLE1BQUosQ0FBVyw2QkFBWCxFQUEwQyxHQUExQztBQUNBTixFQUFBQSxHQUFHLENBQUNNLE1BQUosQ0FDSSw4QkFESixFQUVJLCtEQUZKOztBQUlBLE1BQUlQLEdBQUcsQ0FBQ1EsTUFBSixLQUFlLFNBQW5CLEVBQThCO0FBQzFCUCxJQUFBQSxHQUFHLENBQUNNLE1BQUosQ0FBVyw4QkFBWCxFQUEyQyxrQkFBM0M7QUFDQSxXQUFPTixHQUFHLENBQUNRLE1BQUosQ0FBVyxHQUFYLEVBQWdCWixJQUFoQixDQUFxQixFQUFyQixDQUFQO0FBQ0g7O0FBQ0RLLEVBQUFBLElBQUk7QUFDUCxDQVhELEUsQ0FjQTs7QUFFQVIsR0FBRyxDQUFDQyxHQUFKLENBQVEsZUFBUixFQUF5QmUsbUJBQU9DLFlBQWhDO0FBQ0FqQixHQUFHLENBQUNDLEdBQUosQ0FBUSxRQUFSLEVBQWtCZSxtQkFBT0UsSUFBekIsRSxDQUtBOztBQUVBbEIsR0FBRyxDQUFDbUIsTUFBSixDQUFXQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsSUFBdkIsRUFBNkI7QUFBQSxTQUN6QkMsT0FBTyxDQUFDQyxHQUFSLG9DQUF3Q0osT0FBTyxDQUFDQyxHQUFSLENBQVlDLElBQXBELE9BRHlCO0FBQUEsQ0FBN0IiLCJzb3VyY2VSb290IjoiL1VzZXJzL25hbWUvZGV2L2JldHRpbmcvc3JjLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjb3JzIGZyb20gJ2NvcnMnO1xuaW1wb3J0ICdkb3RlbnYvY29uZmlnJztcbmltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IG1vZGVscyBmcm9tICcuL21vZGVscyc7XG5pbXBvcnQgcm91dGVzIGZyb20gJy4vcm91dGVzJztcblxuXG5cbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcblxuLy8gKiBBcHBsaWNhdGlvbi1MZXZlbCBNaWRkbGV3YXJlICogLy9cblxuLy8gVGhpcmQtUGFydHkgTWlkZGxld2FyZVxuXG5hcHAudXNlKGNvcnMoKSk7XG5cbi8vIEJ1aWx0LUluIE1pZGRsZXdhcmVcblxuYXBwLnVzZShleHByZXNzLmpzb24oKSk7XG5hcHAudXNlKGV4cHJlc3MudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiB0cnVlIH0pKTtcblxuLy8gQ3VzdG9tIE1pZGRsZXdhcmVcblxuYXBwLnVzZSgocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICByZXEuY29udGV4dCA9IHtcbiAgICAgICAgbW9kZWxzLFxuICAgICAgICBtZTogbW9kZWxzLnVzZXJzWzFdLFxuICAgIH07XG4gICAgbmV4dCgpO1xufSk7XG5cblxuXG5cblxuLy8vIFxuXG5hcHAudXNlKChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIHJlcy5oZWFkZXIoXCJBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW5cIiwgXCIqXCIpO1xuICAgIHJlcy5oZWFkZXIoXG4gICAgICAgIFwiQWNjZXNzLUNvbnRyb2wtQWxsb3ctSGVhZGVyc1wiLFxuICAgICAgICBcIk9yaWdpbiwgWC1SZXF1ZXN0ZWQtV2l0aCwgQ29udGVudC1UeXBlLCBBY2NlcHQsIEF1dGhvcml6YXRpb25cIlxuICAgICk7XG4gICAgaWYgKHJlcS5tZXRob2QgPT09ICdPUFRJT05TJykge1xuICAgICAgICByZXMuaGVhZGVyKCdBY2Nlc3MtQ29udHJvbC1BbGxvdy1NZXRob2RzJywgJ1BPU1QsIFBBVENILCBHRVQnKTtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAzKS5qc29uKHt9KTtcbiAgICB9XG4gICAgbmV4dCgpO1xufSlcblxuXG4vLyAqIFJvdXRlcyAqIC8vXG5cbmFwcC51c2UoJy90cmFuc2FjdGlvbnMnLCByb3V0ZXMudHJhbnNhY3Rpb25zKTtcbmFwcC51c2UoJy91c2VycycsIHJvdXRlcy51c2VyKTtcblxuXG5cblxuLy8gKiBTdGFydCAqIC8vXG5cbmFwcC5saXN0ZW4ocHJvY2Vzcy5lbnYuUE9SVCwgKCkgPT5cbiAgICBjb25zb2xlLmxvZyhgU2VydmVyIGxpc3RlbmluZyBvbiBwb3J0ICR7cHJvY2Vzcy5lbnYuUE9SVH0hYCksXG5cbik7Il19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "use",
        "express",
        "json",
        "urlencoded",
        "extended",
        "req",
        "res",
        "next",
        "context",
        "models",
        "me",
        "users",
        "header",
        "method",
        "status",
        "routes",
        "transactions",
        "user",
        "listen",
        "process",
        "env",
        "PORT",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAIA,IAAMA,GAAG,GAAG,0BAAZ,C,CAEA;AAEA;;AAEAA,GAAG,CAACC,GAAJ,CAAQ,uBAAR,E,CAEA;;AAEAD,GAAG,CAACC,GAAJ,CAAQC,oBAAQC,IAAR,EAAR;AACAH,GAAG,CAACC,GAAJ,CAAQC,oBAAQE,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR,E,CAEA;;AAEAL,GAAG,CAACC,GAAJ,CAAQ,UAACK,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxBF,EAAAA,GAAG,CAACG,OAAJ,GAAc;AACVC,IAAAA,MAAM,EAANA,kBADU;AAEVC,IAAAA,EAAE,EAAED,mBAAOE,KAAP,CAAa,CAAb;AAFM,GAAd;AAIAJ,EAAAA,IAAI;AACP,CAND,E,CAYA;;AAEAR,GAAG,CAACC,GAAJ,CAAQ,UAACK,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxBD,EAAAA,GAAG,CAACM,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAN,EAAAA,GAAG,CAACM,MAAJ,CACI,8BADJ,EAEI,+DAFJ;;AAIA,MAAIP,GAAG,CAACQ,MAAJ,KAAe,SAAnB,EAA8B;AAC1BP,IAAAA,GAAG,CAACM,MAAJ,CAAW,8BAAX,EAA2C,kBAA3C;AACA,WAAON,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBZ,IAAhB,CAAqB,EAArB,CAAP;AACH;;AACDK,EAAAA,IAAI;AACP,CAXD,E,CAcA;;AAEAR,GAAG,CAACC,GAAJ,CAAQ,eAAR,EAAyBe,mBAAOC,YAAhC;AACAjB,GAAG,CAACC,GAAJ,CAAQ,QAAR,EAAkBe,mBAAOE,IAAzB,E,CAKA;;AAEAlB,GAAG,CAACmB,MAAJ,CAAWC,OAAO,CAACC,GAAR,CAAYC,IAAvB,EAA6B;AAAA,SACzBC,OAAO,CAACC,GAAR,oCAAwCJ,OAAO,CAACC,GAAR,CAAYC,IAApD,OADyB;AAAA,CAA7B",
      "sourceRoot": "/Users/name/dev/betting/src/",
      "sourcesContent": [
        "import cors from 'cors';\nimport 'dotenv/config';\nimport express from 'express';\nimport models from './models';\nimport routes from './routes';\n\n\n\nconst app = express();\n\n// * Application-Level Middleware * //\n\n// Third-Party Middleware\n\napp.use(cors());\n\n// Built-In Middleware\n\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\n\n// Custom Middleware\n\napp.use((req, res, next) => {\n    req.context = {\n        models,\n        me: models.users[1],\n    };\n    next();\n});\n\n\n\n\n\n/// \n\napp.use((req, res, next) => {\n    res.header(\"Access-Control-Allow-Origin\", \"*\");\n    res.header(\n        \"Access-Control-Allow-Headers\",\n        \"Origin, X-Requested-With, Content-Type, Accept, Authorization\"\n    );\n    if (req.method === 'OPTIONS') {\n        res.header('Access-Control-Allow-Methods', 'POST, PATCH, GET');\n        return res.status(203).json({});\n    }\n    next();\n})\n\n\n// * Routes * //\n\napp.use('/transactions', routes.transactions);\napp.use('/users', routes.user);\n\n\n\n\n// * Start * //\n\napp.listen(process.env.PORT, () =>\n    console.log(`Server listening on port ${process.env.PORT}!`),\n\n);"
      ]
    },
    "sourceType": "script",
    "mtime": 1599627374367
  },
  "{\"sourceRoot\":\"/Users/name/dev/betting/src/models/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/name/dev/betting\",\"filename\":\"/Users/name/dev/betting/src/models/index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/name/dev/betting\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/name/dev/betting/src/models/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/name/dev/betting",
      "filename": "/Users/name/dev/betting/src/models/index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/name/dev/betting",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/name/dev/betting/src/models/index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/name/dev/betting/src/models/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/name/dev/betting/src/models/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar users = {\n  1: {\n    id: \"000002200-0000-0000-0000-000000000000\",\n    first_name: \"Jioe\",\n    last_name: \"Soonap\",\n    email: \"jean@1xpay.net\",\n    currency: {\n      description: \"Western Africa CFA\",\n      code: \"CFA\",\n      symbol: \"XOF\",\n      unit: \"CFA\",\n      divisibility: 5\n    },\n    account: 3500000,\n    available_balance: 1500000,\n    mobile: \"+27840000000\"\n  },\n  2: {\n    id: \"000002200-0000-0000-0000-000000000000\",\n    first_name: \"Jioe\",\n    last_name: \"Soonap\",\n    email: \"jean@rehive.com\",\n    currency: {\n      description: \"Rand\",\n      code: \"ZAR\",\n      symbol: \"R\",\n      unit: \"rand\",\n      divisibility: 2\n    },\n    account: 0,\n    available_balance: 0,\n    mobile: \"+27840000000\"\n  }\n};\nvar topup = {\n  userEmail: \"serge@gmail.com\",\n  accountID: \"dedrfqw12312313\",\n  orderId: 545434234,\n  subtype: \"payout\",\n  partnerName: '1XPAY',\n  tx_type: \"credit\",\n  status: \"pending\",\n  reference: \"\",\n  amount: 50000\n};\nvar collections = {\n  userEmail: \"serge@gmail.com\",\n  accountID: \"dedrfqw12312313\",\n  orderId: 545434234,\n  subtype: \"payout\",\n  partnerName: '1XPAY',\n  tx_type: \"debit\",\n  status: \"pending\",\n  reference: \"\",\n  amount: 50000\n};\nvar payout = {\n  userEmail: \"1x-payment@1xpay.net\",\n  accountID: \"dedrfqw12312313\",\n  orderId: 545434234,\n  subtype: \"payout\",\n  partnerName: '1XPAY',\n  tx_type: \"debit\",\n  status: \"pending\",\n  reference: \"\",\n  amount: 5000000\n};\nvar transactions = {\n  1: {\n    customerEmail: \"serge@gmail.com\",\n    customerAccountNumber: \"dedrfqw12312313\",\n    currency: \"XOF\",\n    customerFirstname: \"serge\",\n    customerLastname: \"Ouedraogo\",\n    partnerName: \"1XPAY\",\n    tx_type: \"credit\",\n    subtype: \"deposit\",\n    status: \"confirmed\",\n    reference: \"545434234\",\n    amount: 500\n  },\n  2: {\n    customerEmail: \"serge@gmail.com\",\n    customerAccountNumber: \"dedrfqw12312313\",\n    currency: \"XOF\",\n    customerFirstname: \"serge\",\n    customerLastname: \"Ouedraogo\",\n    partnerName: \"1XPAY\",\n    tx_type: \"debit\",\n    subtype: \"collection\",\n    status: \"confirmed\",\n    reference: \"545434234\",\n    amount: 500\n  },\n  3: {\n    customerEmail: \"1xpay@1xpay.net\",\n    customerAccountNumber: \"dedrfqw12312313\",\n    currency: \"USD\",\n    customerFirstname: \"serge\",\n    customerLastname: \"Ouedraogo\",\n    partnerName: \"DUNIAPAY\",\n    tx_type: \"debit\",\n    subtype: \"payout\",\n    status: \"confirmed\",\n    reference: \"545434234\",\n    amount: 50000\n  }\n};\nvar _default = {\n  users: users,\n  transactions: transactions\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "users",
        "id",
        "first_name",
        "last_name",
        "email",
        "currency",
        "description",
        "code",
        "symbol",
        "unit",
        "divisibility",
        "account",
        "available_balance",
        "mobile",
        "topup",
        "userEmail",
        "accountID",
        "orderId",
        "subtype",
        "partnerName",
        "tx_type",
        "status",
        "reference",
        "amount",
        "collections",
        "payout",
        "transactions",
        "customerEmail",
        "customerAccountNumber",
        "customerFirstname",
        "customerLastname"
      ],
      "mappings": ";;;;;;AAAA,IAAIA,KAAK,GAAG;AACR,KAAG;AACCC,IAAAA,EAAE,EAAE,uCADL;AAECC,IAAAA,UAAU,EAAE,MAFb;AAGCC,IAAAA,SAAS,EAAE,QAHZ;AAICC,IAAAA,KAAK,EAAE,gBAJR;AAKCC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,WAAW,EAAE,oBADP;AAENC,MAAAA,IAAI,EAAE,KAFA;AAGNC,MAAAA,MAAM,EAAE,KAHF;AAINC,MAAAA,IAAI,EAAE,KAJA;AAKNC,MAAAA,YAAY,EAAE;AALR,KALX;AAYCC,IAAAA,OAAO,EAAE,OAZV;AAaCC,IAAAA,iBAAiB,EAAE,OAbpB;AAcCC,IAAAA,MAAM,EAAE;AAdT,GADK;AAiBR,KAAG;AACCZ,IAAAA,EAAE,EAAE,uCADL;AAECC,IAAAA,UAAU,EAAE,MAFb;AAGCC,IAAAA,SAAS,EAAE,QAHZ;AAICC,IAAAA,KAAK,EAAE,iBAJR;AAKCC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,WAAW,EAAE,MADP;AAENC,MAAAA,IAAI,EAAE,KAFA;AAGNC,MAAAA,MAAM,EAAE,GAHF;AAINC,MAAAA,IAAI,EAAE,MAJA;AAKNC,MAAAA,YAAY,EAAE;AALR,KALX;AAYCC,IAAAA,OAAO,EAAE,CAZV;AAaCC,IAAAA,iBAAiB,EAAE,CAbpB;AAcCC,IAAAA,MAAM,EAAE;AAdT;AAjBK,CAAZ;AAqCA,IAAIC,KAAK,GAAG;AACRC,EAAAA,SAAS,EAAE,iBADH;AAERC,EAAAA,SAAS,EAAE,iBAFH;AAGRC,EAAAA,OAAO,EAAE,SAHD;AAIRC,EAAAA,OAAO,EAAE,QAJD;AAKRC,EAAAA,WAAW,EAAE,OALL;AAMRC,EAAAA,OAAO,EAAE,QAND;AAORC,EAAAA,MAAM,EAAE,SAPA;AAQRC,EAAAA,SAAS,EAAE,EARH;AASRC,EAAAA,MAAM,EAAE;AATA,CAAZ;AAYA,IAAIC,WAAW,GAAG;AACdT,EAAAA,SAAS,EAAE,iBADG;AAEdC,EAAAA,SAAS,EAAE,iBAFG;AAGdC,EAAAA,OAAO,EAAE,SAHK;AAIdC,EAAAA,OAAO,EAAE,QAJK;AAKdC,EAAAA,WAAW,EAAE,OALC;AAMdC,EAAAA,OAAO,EAAE,OANK;AAOdC,EAAAA,MAAM,EAAE,SAPM;AAQdC,EAAAA,SAAS,EAAE,EARG;AASdC,EAAAA,MAAM,EAAE;AATM,CAAlB;AAYA,IAAIE,MAAM,GAAG;AAETV,EAAAA,SAAS,EAAE,sBAFF;AAGTC,EAAAA,SAAS,EAAE,iBAHF;AAITC,EAAAA,OAAO,EAAE,SAJA;AAKTC,EAAAA,OAAO,EAAE,QALA;AAMTC,EAAAA,WAAW,EAAE,OANJ;AAOTC,EAAAA,OAAO,EAAE,OAPA;AAQTC,EAAAA,MAAM,EAAE,SARC;AASTC,EAAAA,SAAS,EAAE,EATF;AAUTC,EAAAA,MAAM,EAAE;AAVC,CAAb;AAcA,IAAIG,YAAY,GAAG;AACf,KAAG;AACCC,IAAAA,aAAa,EAAE,iBADhB;AAECC,IAAAA,qBAAqB,EAAE,iBAFxB;AAGCvB,IAAAA,QAAQ,EAAE,KAHX;AAICwB,IAAAA,iBAAiB,EAAE,OAJpB;AAKCC,IAAAA,gBAAgB,EAAE,WALnB;AAMCX,IAAAA,WAAW,EAAE,OANd;AAOCC,IAAAA,OAAO,EAAE,QAPV;AAQCF,IAAAA,OAAO,EAAE,SARV;AASCG,IAAAA,MAAM,EAAE,WATT;AAUCC,IAAAA,SAAS,EAAE,WAVZ;AAWCC,IAAAA,MAAM,EAAE;AAXT,GADY;AAcf,KAAG;AACCI,IAAAA,aAAa,EAAE,iBADhB;AAECC,IAAAA,qBAAqB,EAAE,iBAFxB;AAGCvB,IAAAA,QAAQ,EAAE,KAHX;AAICwB,IAAAA,iBAAiB,EAAE,OAJpB;AAKCC,IAAAA,gBAAgB,EAAE,WALnB;AAMCX,IAAAA,WAAW,EAAE,OANd;AAOCC,IAAAA,OAAO,EAAE,OAPV;AAQCF,IAAAA,OAAO,EAAE,YARV;AASCG,IAAAA,MAAM,EAAE,WATT;AAUCC,IAAAA,SAAS,EAAE,WAVZ;AAWCC,IAAAA,MAAM,EAAE;AAXT,GAdY;AA2Bf,KAAG;AACCI,IAAAA,aAAa,EAAE,iBADhB;AAECC,IAAAA,qBAAqB,EAAE,iBAFxB;AAGCvB,IAAAA,QAAQ,EAAE,KAHX;AAICwB,IAAAA,iBAAiB,EAAE,OAJpB;AAKCC,IAAAA,gBAAgB,EAAE,WALnB;AAMCX,IAAAA,WAAW,EAAE,UANd;AAOCC,IAAAA,OAAO,EAAE,OAPV;AAQCF,IAAAA,OAAO,EAAE,QARV;AASCG,IAAAA,MAAM,EAAE,WATT;AAUCC,IAAAA,SAAS,EAAE,WAVZ;AAWCC,IAAAA,MAAM,EAAE;AAXT;AA3BY,CAAnB;eA0Ce;AACXvB,EAAAA,KAAK,EAALA,KADW;AAEX0B,EAAAA,YAAY,EAAZA;AAFW,C",
      "sourceRoot": "/Users/name/dev/betting/src/models/",
      "sourcesContent": [
        "let users = {\n    1: {\n        id: \"000002200-0000-0000-0000-000000000000\",\n        first_name: \"Jioe\",\n        last_name: \"Soonap\",\n        email: \"jean@1xpay.net\",\n        currency: {\n            description: \"Western Africa CFA\",\n            code: \"CFA\",\n            symbol: \"XOF\",\n            unit: \"CFA\",\n            divisibility: 5\n        },\n        account: 3500000,\n        available_balance: 1500000,\n        mobile: \"+27840000000\",\n    },\n    2: {\n        id: \"000002200-0000-0000-0000-000000000000\",\n        first_name: \"Jioe\",\n        last_name: \"Soonap\",\n        email: \"jean@rehive.com\",\n        currency: {\n            description: \"Rand\",\n            code: \"ZAR\",\n            symbol: \"R\",\n            unit: \"rand\",\n            divisibility: 2\n        },\n        account: 0,\n        available_balance: 0,\n        mobile: \"+27840000000\",\n    },\n};\n\n\n\nlet topup = {\n    userEmail: \"serge@gmail.com\",\n    accountID: \"dedrfqw12312313\",\n    orderId: 545434234,\n    subtype: \"payout\",\n    partnerName: '1XPAY',\n    tx_type: \"credit\",\n    status: \"pending\",\n    reference: \"\",\n    amount: 50000,\n};\n\nlet collections = {\n    userEmail: \"serge@gmail.com\",\n    accountID: \"dedrfqw12312313\",\n    orderId: 545434234,\n    subtype: \"payout\",\n    partnerName: '1XPAY',\n    tx_type: \"debit\",\n    status: \"pending\",\n    reference: \"\",\n    amount: 50000,\n};\n\nlet payout = {\n\n    userEmail: \"1x-payment@1xpay.net\",\n    accountID: \"dedrfqw12312313\",\n    orderId: 545434234,\n    subtype: \"payout\",\n    partnerName: '1XPAY',\n    tx_type: \"debit\",\n    status: \"pending\",\n    reference: \"\",\n    amount: 5000000,\n\n};\n\nlet transactions = {\n    1: {\n        customerEmail: \"serge@gmail.com\",\n        customerAccountNumber: \"dedrfqw12312313\",\n        currency: \"XOF\",\n        customerFirstname: \"serge\",\n        customerLastname: \"Ouedraogo\",\n        partnerName: \"1XPAY\",\n        tx_type: \"credit\",\n        subtype: \"deposit\",\n        status: \"confirmed\",\n        reference: \"545434234\",\n        amount: 500,\n    },\n    2: {\n        customerEmail: \"serge@gmail.com\",\n        customerAccountNumber: \"dedrfqw12312313\",\n        currency: \"XOF\",\n        customerFirstname: \"serge\",\n        customerLastname: \"Ouedraogo\",\n        partnerName: \"1XPAY\",\n        tx_type: \"debit\",\n        subtype: \"collection\",\n        status: \"confirmed\",\n        reference: \"545434234\",\n        amount: 500,\n    },\n    3: {\n        customerEmail: \"1xpay@1xpay.net\",\n        customerAccountNumber: \"dedrfqw12312313\",\n        currency: \"USD\",\n        customerFirstname: \"serge\",\n        customerLastname: \"Ouedraogo\",\n        partnerName: \"DUNIAPAY\",\n        tx_type: \"debit\",\n        subtype: \"payout\",\n        status: \"confirmed\",\n        reference: \"545434234\",\n        amount: 50000,\n    }\n};\n\nexport default {\n    users,\n    transactions,\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1599621812586
  },
  "{\"sourceRoot\":\"/Users/name/dev/betting/src/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/name/dev/betting\",\"filename\":\"/Users/name/dev/betting/src/routes/index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/name/dev/betting\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/name/dev/betting/src/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/name/dev/betting",
      "filename": "/Users/name/dev/betting/src/routes/index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/name/dev/betting",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/name/dev/betting/src/routes/index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/name/dev/betting/src/routes/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/name/dev/betting/src/routes/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _transactions = _interopRequireDefault(require(\"./transactions\"));\n\nvar _user = _interopRequireDefault(require(\"./user\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _default = {\n  transactions: _transactions[\"default\"],\n  user: _user[\"default\"]\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInRyYW5zYWN0aW9ucyIsInVzZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7OztlQUVlO0FBQ1hBLEVBQUFBLFlBQVksRUFBWkEsd0JBRFc7QUFFWEMsRUFBQUEsSUFBSSxFQUFKQTtBQUZXLEMiLCJzb3VyY2VSb290IjoiL1VzZXJzL25hbWUvZGV2L2JldHRpbmcvc3JjL3JvdXRlcy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHJhbnNhY3Rpb25zIGZyb20gJy4vdHJhbnNhY3Rpb25zJztcbmltcG9ydCB1c2VyIGZyb20gJy4vdXNlcic7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgICB0cmFuc2FjdGlvbnMsXG4gICAgdXNlcixcbn07Il19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "transactions",
        "user"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;eAEe;AACXA,EAAAA,YAAY,EAAZA,wBADW;AAEXC,EAAAA,IAAI,EAAJA;AAFW,C",
      "sourceRoot": "/Users/name/dev/betting/src/routes/",
      "sourcesContent": [
        "import transactions from './transactions';\nimport user from './user';\n\nexport default {\n    transactions,\n    user,\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1599248939959
  },
  "{\"sourceRoot\":\"/Users/name/dev/betting/src/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/name/dev/betting\",\"filename\":\"/Users/name/dev/betting/src/routes/transactions.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/name/dev/betting\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/name/dev/betting/src/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/name/dev/betting",
      "filename": "/Users/name/dev/betting/src/routes/transactions.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/name/dev/betting",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/name/dev/betting/src/routes/transactions.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/name/dev/betting/src/routes/transactions.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/name/dev/betting/src/routes/",
        "sourceFileName": "transactions.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _uuid = require(\"uuid\");\n\nvar jwt = require('express-jwt');\n\nvar jwks = require('jwks-rsa');\n\nvar router = (0, _express.Router)();\nvar isAuthenticated = jwt({\n  secret: jwks.expressJwtSecret({\n    cache: true,\n    rateLimit: true,\n    jwksRequestsPerMinute: 5,\n    jwksUri: 'https://dev-1f5g1j38.eu.auth0.com/.well-known/jwks.json'\n  }),\n  audience: 'https://api.duniapay.net/',\n  issuer: 'https://dev-1f5g1j38.eu.auth0.com/',\n  algorithms: ['RS256']\n});\nrouter.get('/', isAuthenticated, function (req, res) {\n  // TODO get transactions list from database\n  return res.send(Object.values(req.context.models.transactions));\n});\nrouter.get('/:transactionId', isAuthenticated, function (req, res) {\n  // TODO get transactions from id\n  return res.send(req.context.models.transactions[req.params.transactionId]);\n});\nrouter.post('/collect', isAuthenticated, function (req, res) {\n  var id = (0, _uuid.v4)();\n  var transaction = {\n    id: id,\n    params: req.body,\n    status: 'pending',\n    tx_type: 'debit',\n    subtype: 'collection',\n    created: Date.now()\n  };\n  req.context.models.collection = transaction;\n  return res.send(transaction);\n});\nrouter.post('/deposit', isAuthenticated, function (req, res) {\n  var id = (0, _uuid.v4)();\n  var transaction = {\n    id: id,\n    text: req.body,\n    status: 'pending',\n    tx_type: 'credit',\n    subtype: 'deposit',\n    created: Date.now()\n  };\n  req.context.models.topup = transaction;\n  return res.send(transaction);\n});\nrouter.post('/payout', isAuthenticated, function (req, res) {\n  var id = (0, _uuid.v4)();\n  var transaction = {\n    id: id,\n    text: req.body,\n    status: 'pending',\n    tx_type: 'debit',\n    subtype: 'payout',\n    created: Date.now()\n  };\n  req.context.models.payout = transaction;\n  return res.send(transaction);\n});\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyYW5zYWN0aW9ucy5qcyJdLCJuYW1lcyI6WyJqd3QiLCJyZXF1aXJlIiwiandrcyIsInJvdXRlciIsImlzQXV0aGVudGljYXRlZCIsInNlY3JldCIsImV4cHJlc3NKd3RTZWNyZXQiLCJjYWNoZSIsInJhdGVMaW1pdCIsImp3a3NSZXF1ZXN0c1Blck1pbnV0ZSIsImp3a3NVcmkiLCJhdWRpZW5jZSIsImlzc3VlciIsImFsZ29yaXRobXMiLCJnZXQiLCJyZXEiLCJyZXMiLCJzZW5kIiwiT2JqZWN0IiwidmFsdWVzIiwiY29udGV4dCIsIm1vZGVscyIsInRyYW5zYWN0aW9ucyIsInBhcmFtcyIsInRyYW5zYWN0aW9uSWQiLCJwb3N0IiwiaWQiLCJ0cmFuc2FjdGlvbiIsImJvZHkiLCJzdGF0dXMiLCJ0eF90eXBlIiwic3VidHlwZSIsImNyZWF0ZWQiLCJEYXRlIiwibm93IiwiY29sbGVjdGlvbiIsInRleHQiLCJ0b3B1cCIsInBheW91dCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBLElBQUlBLEdBQUcsR0FBR0MsT0FBTyxDQUFDLGFBQUQsQ0FBakI7O0FBQ0EsSUFBSUMsSUFBSSxHQUFHRCxPQUFPLENBQUMsVUFBRCxDQUFsQjs7QUFFQSxJQUFNRSxNQUFNLEdBQUcsc0JBQWY7QUFHQSxJQUFJQyxlQUFlLEdBQUdKLEdBQUcsQ0FBQztBQUN0QkssRUFBQUEsTUFBTSxFQUFFSCxJQUFJLENBQUNJLGdCQUFMLENBQXNCO0FBQzFCQyxJQUFBQSxLQUFLLEVBQUUsSUFEbUI7QUFFMUJDLElBQUFBLFNBQVMsRUFBRSxJQUZlO0FBRzFCQyxJQUFBQSxxQkFBcUIsRUFBRSxDQUhHO0FBSTFCQyxJQUFBQSxPQUFPLEVBQUU7QUFKaUIsR0FBdEIsQ0FEYztBQU90QkMsRUFBQUEsUUFBUSxFQUFFLDJCQVBZO0FBUXRCQyxFQUFBQSxNQUFNLEVBQUUsb0NBUmM7QUFTdEJDLEVBQUFBLFVBQVUsRUFBRSxDQUFDLE9BQUQ7QUFUVSxDQUFELENBQXpCO0FBZUFWLE1BQU0sQ0FBQ1csR0FBUCxDQUFXLEdBQVgsRUFBZ0JWLGVBQWhCLEVBQWlDLFVBQUNXLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQzNDO0FBQ0EsU0FBT0EsR0FBRyxDQUFDQyxJQUFKLENBQVNDLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjSixHQUFHLENBQUNLLE9BQUosQ0FBWUMsTUFBWixDQUFtQkMsWUFBakMsQ0FBVCxDQUFQO0FBQ0gsQ0FIRDtBQUtBbkIsTUFBTSxDQUFDVyxHQUFQLENBQVcsaUJBQVgsRUFBOEJWLGVBQTlCLEVBQStDLFVBQUNXLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ3pEO0FBQ0EsU0FBT0EsR0FBRyxDQUFDQyxJQUFKLENBQVNGLEdBQUcsQ0FBQ0ssT0FBSixDQUFZQyxNQUFaLENBQW1CQyxZQUFuQixDQUFnQ1AsR0FBRyxDQUFDUSxNQUFKLENBQVdDLGFBQTNDLENBQVQsQ0FBUDtBQUNILENBSEQ7QUFRQXJCLE1BQU0sQ0FBQ3NCLElBQVAsQ0FBWSxVQUFaLEVBQXdCckIsZUFBeEIsRUFBeUMsVUFBQ1csR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDbkQsTUFBTVUsRUFBRSxHQUFHLGVBQVg7QUFDQSxNQUFNQyxXQUFXLEdBQUc7QUFDaEJELElBQUFBLEVBQUUsRUFBRkEsRUFEZ0I7QUFFaEJILElBQUFBLE1BQU0sRUFBRVIsR0FBRyxDQUFDYSxJQUZJO0FBR2hCQyxJQUFBQSxNQUFNLEVBQUUsU0FIUTtBQUloQkMsSUFBQUEsT0FBTyxFQUFFLE9BSk87QUFLaEJDLElBQUFBLE9BQU8sRUFBRSxZQUxPO0FBTWhCQyxJQUFBQSxPQUFPLEVBQUVDLElBQUksQ0FBQ0MsR0FBTDtBQU5PLEdBQXBCO0FBUUFuQixFQUFBQSxHQUFHLENBQUNLLE9BQUosQ0FBWUMsTUFBWixDQUFtQmMsVUFBbkIsR0FBZ0NSLFdBQWhDO0FBQ0EsU0FBT1gsR0FBRyxDQUFDQyxJQUFKLENBQVNVLFdBQVQsQ0FBUDtBQUVILENBYkQ7QUFnQkF4QixNQUFNLENBQUNzQixJQUFQLENBQVksVUFBWixFQUF3QnJCLGVBQXhCLEVBQXlDLFVBQUNXLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ25ELE1BQU1VLEVBQUUsR0FBRyxlQUFYO0FBQ0EsTUFBTUMsV0FBVyxHQUFHO0FBQ2hCRCxJQUFBQSxFQUFFLEVBQUZBLEVBRGdCO0FBRWhCVSxJQUFBQSxJQUFJLEVBQUVyQixHQUFHLENBQUNhLElBRk07QUFHaEJDLElBQUFBLE1BQU0sRUFBRSxTQUhRO0FBSWhCQyxJQUFBQSxPQUFPLEVBQUUsUUFKTztBQUtoQkMsSUFBQUEsT0FBTyxFQUFFLFNBTE87QUFNaEJDLElBQUFBLE9BQU8sRUFBRUMsSUFBSSxDQUFDQyxHQUFMO0FBTk8sR0FBcEI7QUFRQW5CLEVBQUFBLEdBQUcsQ0FBQ0ssT0FBSixDQUFZQyxNQUFaLENBQW1CZ0IsS0FBbkIsR0FBMkJWLFdBQTNCO0FBQ0EsU0FBT1gsR0FBRyxDQUFDQyxJQUFKLENBQVNVLFdBQVQsQ0FBUDtBQUNILENBWkQ7QUFnQkF4QixNQUFNLENBQUNzQixJQUFQLENBQVksU0FBWixFQUF1QnJCLGVBQXZCLEVBQXdDLFVBQUNXLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2xELE1BQU1VLEVBQUUsR0FBRyxlQUFYO0FBQ0EsTUFBTUMsV0FBVyxHQUFHO0FBQ2hCRCxJQUFBQSxFQUFFLEVBQUZBLEVBRGdCO0FBRWhCVSxJQUFBQSxJQUFJLEVBQUVyQixHQUFHLENBQUNhLElBRk07QUFHaEJDLElBQUFBLE1BQU0sRUFBRSxTQUhRO0FBSWhCQyxJQUFBQSxPQUFPLEVBQUUsT0FKTztBQUtoQkMsSUFBQUEsT0FBTyxFQUFFLFFBTE87QUFNaEJDLElBQUFBLE9BQU8sRUFBRUMsSUFBSSxDQUFDQyxHQUFMO0FBTk8sR0FBcEI7QUFRQW5CLEVBQUFBLEdBQUcsQ0FBQ0ssT0FBSixDQUFZQyxNQUFaLENBQW1CaUIsTUFBbkIsR0FBNEJYLFdBQTVCO0FBQ0EsU0FBT1gsR0FBRyxDQUFDQyxJQUFKLENBQVNVLFdBQVQsQ0FBUDtBQUNILENBWkQ7ZUFpQmV4QixNIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9uYW1lL2Rldi9iZXR0aW5nL3NyYy9yb3V0ZXMvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGVyIH0gZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgeyB2NCBhcyB1dWlkdjQgfSBmcm9tICd1dWlkJztcbnZhciBqd3QgPSByZXF1aXJlKCdleHByZXNzLWp3dCcpO1xudmFyIGp3a3MgPSByZXF1aXJlKCdqd2tzLXJzYScpO1xuXG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoKTtcblxuXG52YXIgaXNBdXRoZW50aWNhdGVkID0gand0KHtcbiAgICBzZWNyZXQ6IGp3a3MuZXhwcmVzc0p3dFNlY3JldCh7XG4gICAgICAgIGNhY2hlOiB0cnVlLFxuICAgICAgICByYXRlTGltaXQ6IHRydWUsXG4gICAgICAgIGp3a3NSZXF1ZXN0c1Blck1pbnV0ZTogNSxcbiAgICAgICAgandrc1VyaTogJ2h0dHBzOi8vZGV2LTFmNWcxajM4LmV1LmF1dGgwLmNvbS8ud2VsbC1rbm93bi9qd2tzLmpzb24nXG4gICAgfSksXG4gICAgYXVkaWVuY2U6ICdodHRwczovL2FwaS5kdW5pYXBheS5uZXQvJyxcbiAgICBpc3N1ZXI6ICdodHRwczovL2Rldi0xZjVnMWozOC5ldS5hdXRoMC5jb20vJyxcbiAgICBhbGdvcml0aG1zOiBbJ1JTMjU2J11cbn0pO1xuXG5cblxuXG5yb3V0ZXIuZ2V0KCcvJywgaXNBdXRoZW50aWNhdGVkLCAocmVxLCByZXMpID0+IHtcbiAgICAvLyBUT0RPIGdldCB0cmFuc2FjdGlvbnMgbGlzdCBmcm9tIGRhdGFiYXNlXG4gICAgcmV0dXJuIHJlcy5zZW5kKE9iamVjdC52YWx1ZXMocmVxLmNvbnRleHQubW9kZWxzLnRyYW5zYWN0aW9ucykpO1xufSk7XG5cbnJvdXRlci5nZXQoJy86dHJhbnNhY3Rpb25JZCcsIGlzQXV0aGVudGljYXRlZCwgKHJlcSwgcmVzKSA9PiB7XG4gICAgLy8gVE9ETyBnZXQgdHJhbnNhY3Rpb25zIGZyb20gaWRcbiAgICByZXR1cm4gcmVzLnNlbmQocmVxLmNvbnRleHQubW9kZWxzLnRyYW5zYWN0aW9uc1tyZXEucGFyYW1zLnRyYW5zYWN0aW9uSWRdKTtcbn0pO1xuXG5cblxuXG5yb3V0ZXIucG9zdCgnL2NvbGxlY3QnLCBpc0F1dGhlbnRpY2F0ZWQsIChyZXEsIHJlcykgPT4ge1xuICAgIGNvbnN0IGlkID0gdXVpZHY0KCk7XG4gICAgY29uc3QgdHJhbnNhY3Rpb24gPSB7XG4gICAgICAgIGlkLFxuICAgICAgICBwYXJhbXM6IHJlcS5ib2R5LFxuICAgICAgICBzdGF0dXM6ICdwZW5kaW5nJyxcbiAgICAgICAgdHhfdHlwZTogJ2RlYml0JyxcbiAgICAgICAgc3VidHlwZTogJ2NvbGxlY3Rpb24nLFxuICAgICAgICBjcmVhdGVkOiBEYXRlLm5vdygpLFxuICAgIH07XG4gICAgcmVxLmNvbnRleHQubW9kZWxzLmNvbGxlY3Rpb24gPSB0cmFuc2FjdGlvbjtcbiAgICByZXR1cm4gcmVzLnNlbmQodHJhbnNhY3Rpb24pO1xuXG59KTtcblxuXG5yb3V0ZXIucG9zdCgnL2RlcG9zaXQnLCBpc0F1dGhlbnRpY2F0ZWQsIChyZXEsIHJlcykgPT4ge1xuICAgIGNvbnN0IGlkID0gdXVpZHY0KCk7XG4gICAgY29uc3QgdHJhbnNhY3Rpb24gPSB7XG4gICAgICAgIGlkLFxuICAgICAgICB0ZXh0OiByZXEuYm9keSxcbiAgICAgICAgc3RhdHVzOiAncGVuZGluZycsXG4gICAgICAgIHR4X3R5cGU6ICdjcmVkaXQnLFxuICAgICAgICBzdWJ0eXBlOiAnZGVwb3NpdCcsXG4gICAgICAgIGNyZWF0ZWQ6IERhdGUubm93KCksXG4gICAgfTtcbiAgICByZXEuY29udGV4dC5tb2RlbHMudG9wdXAgPSB0cmFuc2FjdGlvbjtcbiAgICByZXR1cm4gcmVzLnNlbmQodHJhbnNhY3Rpb24pO1xufSk7XG5cblxuXG5yb3V0ZXIucG9zdCgnL3BheW91dCcsIGlzQXV0aGVudGljYXRlZCwgKHJlcSwgcmVzKSA9PiB7XG4gICAgY29uc3QgaWQgPSB1dWlkdjQoKTtcbiAgICBjb25zdCB0cmFuc2FjdGlvbiA9IHtcbiAgICAgICAgaWQsXG4gICAgICAgIHRleHQ6IHJlcS5ib2R5LFxuICAgICAgICBzdGF0dXM6ICdwZW5kaW5nJyxcbiAgICAgICAgdHhfdHlwZTogJ2RlYml0JyxcbiAgICAgICAgc3VidHlwZTogJ3BheW91dCcsXG4gICAgICAgIGNyZWF0ZWQ6IERhdGUubm93KCksXG4gICAgfTtcbiAgICByZXEuY29udGV4dC5tb2RlbHMucGF5b3V0ID0gdHJhbnNhY3Rpb247XG4gICAgcmV0dXJuIHJlcy5zZW5kKHRyYW5zYWN0aW9uKTtcbn0pO1xuXG5cblxuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "transactions.js"
      ],
      "names": [
        "jwt",
        "require",
        "jwks",
        "router",
        "isAuthenticated",
        "secret",
        "expressJwtSecret",
        "cache",
        "rateLimit",
        "jwksRequestsPerMinute",
        "jwksUri",
        "audience",
        "issuer",
        "algorithms",
        "get",
        "req",
        "res",
        "send",
        "Object",
        "values",
        "context",
        "models",
        "transactions",
        "params",
        "transactionId",
        "post",
        "id",
        "transaction",
        "body",
        "status",
        "tx_type",
        "subtype",
        "created",
        "Date",
        "now",
        "collection",
        "text",
        "topup",
        "payout"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA,IAAIA,GAAG,GAAGC,OAAO,CAAC,aAAD,CAAjB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,UAAD,CAAlB;;AAEA,IAAME,MAAM,GAAG,sBAAf;AAGA,IAAIC,eAAe,GAAGJ,GAAG,CAAC;AACtBK,EAAAA,MAAM,EAAEH,IAAI,CAACI,gBAAL,CAAsB;AAC1BC,IAAAA,KAAK,EAAE,IADmB;AAE1BC,IAAAA,SAAS,EAAE,IAFe;AAG1BC,IAAAA,qBAAqB,EAAE,CAHG;AAI1BC,IAAAA,OAAO,EAAE;AAJiB,GAAtB,CADc;AAOtBC,EAAAA,QAAQ,EAAE,2BAPY;AAQtBC,EAAAA,MAAM,EAAE,oCARc;AAStBC,EAAAA,UAAU,EAAE,CAAC,OAAD;AATU,CAAD,CAAzB;AAeAV,MAAM,CAACW,GAAP,CAAW,GAAX,EAAgBV,eAAhB,EAAiC,UAACW,GAAD,EAAMC,GAAN,EAAc;AAC3C;AACA,SAAOA,GAAG,CAACC,IAAJ,CAASC,MAAM,CAACC,MAAP,CAAcJ,GAAG,CAACK,OAAJ,CAAYC,MAAZ,CAAmBC,YAAjC,CAAT,CAAP;AACH,CAHD;AAKAnB,MAAM,CAACW,GAAP,CAAW,iBAAX,EAA8BV,eAA9B,EAA+C,UAACW,GAAD,EAAMC,GAAN,EAAc;AACzD;AACA,SAAOA,GAAG,CAACC,IAAJ,CAASF,GAAG,CAACK,OAAJ,CAAYC,MAAZ,CAAmBC,YAAnB,CAAgCP,GAAG,CAACQ,MAAJ,CAAWC,aAA3C,CAAT,CAAP;AACH,CAHD;AAQArB,MAAM,CAACsB,IAAP,CAAY,UAAZ,EAAwBrB,eAAxB,EAAyC,UAACW,GAAD,EAAMC,GAAN,EAAc;AACnD,MAAMU,EAAE,GAAG,eAAX;AACA,MAAMC,WAAW,GAAG;AAChBD,IAAAA,EAAE,EAAFA,EADgB;AAEhBH,IAAAA,MAAM,EAAER,GAAG,CAACa,IAFI;AAGhBC,IAAAA,MAAM,EAAE,SAHQ;AAIhBC,IAAAA,OAAO,EAAE,OAJO;AAKhBC,IAAAA,OAAO,EAAE,YALO;AAMhBC,IAAAA,OAAO,EAAEC,IAAI,CAACC,GAAL;AANO,GAApB;AAQAnB,EAAAA,GAAG,CAACK,OAAJ,CAAYC,MAAZ,CAAmBc,UAAnB,GAAgCR,WAAhC;AACA,SAAOX,GAAG,CAACC,IAAJ,CAASU,WAAT,CAAP;AAEH,CAbD;AAgBAxB,MAAM,CAACsB,IAAP,CAAY,UAAZ,EAAwBrB,eAAxB,EAAyC,UAACW,GAAD,EAAMC,GAAN,EAAc;AACnD,MAAMU,EAAE,GAAG,eAAX;AACA,MAAMC,WAAW,GAAG;AAChBD,IAAAA,EAAE,EAAFA,EADgB;AAEhBU,IAAAA,IAAI,EAAErB,GAAG,CAACa,IAFM;AAGhBC,IAAAA,MAAM,EAAE,SAHQ;AAIhBC,IAAAA,OAAO,EAAE,QAJO;AAKhBC,IAAAA,OAAO,EAAE,SALO;AAMhBC,IAAAA,OAAO,EAAEC,IAAI,CAACC,GAAL;AANO,GAApB;AAQAnB,EAAAA,GAAG,CAACK,OAAJ,CAAYC,MAAZ,CAAmBgB,KAAnB,GAA2BV,WAA3B;AACA,SAAOX,GAAG,CAACC,IAAJ,CAASU,WAAT,CAAP;AACH,CAZD;AAgBAxB,MAAM,CAACsB,IAAP,CAAY,SAAZ,EAAuBrB,eAAvB,EAAwC,UAACW,GAAD,EAAMC,GAAN,EAAc;AAClD,MAAMU,EAAE,GAAG,eAAX;AACA,MAAMC,WAAW,GAAG;AAChBD,IAAAA,EAAE,EAAFA,EADgB;AAEhBU,IAAAA,IAAI,EAAErB,GAAG,CAACa,IAFM;AAGhBC,IAAAA,MAAM,EAAE,SAHQ;AAIhBC,IAAAA,OAAO,EAAE,OAJO;AAKhBC,IAAAA,OAAO,EAAE,QALO;AAMhBC,IAAAA,OAAO,EAAEC,IAAI,CAACC,GAAL;AANO,GAApB;AAQAnB,EAAAA,GAAG,CAACK,OAAJ,CAAYC,MAAZ,CAAmBiB,MAAnB,GAA4BX,WAA5B;AACA,SAAOX,GAAG,CAACC,IAAJ,CAASU,WAAT,CAAP;AACH,CAZD;eAiBexB,M",
      "sourceRoot": "/Users/name/dev/betting/src/routes/",
      "sourcesContent": [
        "import { Router } from 'express';\nimport { v4 as uuidv4 } from 'uuid';\nvar jwt = require('express-jwt');\nvar jwks = require('jwks-rsa');\n\nconst router = Router();\n\n\nvar isAuthenticated = jwt({\n    secret: jwks.expressJwtSecret({\n        cache: true,\n        rateLimit: true,\n        jwksRequestsPerMinute: 5,\n        jwksUri: 'https://dev-1f5g1j38.eu.auth0.com/.well-known/jwks.json'\n    }),\n    audience: 'https://api.duniapay.net/',\n    issuer: 'https://dev-1f5g1j38.eu.auth0.com/',\n    algorithms: ['RS256']\n});\n\n\n\n\nrouter.get('/', isAuthenticated, (req, res) => {\n    // TODO get transactions list from database\n    return res.send(Object.values(req.context.models.transactions));\n});\n\nrouter.get('/:transactionId', isAuthenticated, (req, res) => {\n    // TODO get transactions from id\n    return res.send(req.context.models.transactions[req.params.transactionId]);\n});\n\n\n\n\nrouter.post('/collect', isAuthenticated, (req, res) => {\n    const id = uuidv4();\n    const transaction = {\n        id,\n        params: req.body,\n        status: 'pending',\n        tx_type: 'debit',\n        subtype: 'collection',\n        created: Date.now(),\n    };\n    req.context.models.collection = transaction;\n    return res.send(transaction);\n\n});\n\n\nrouter.post('/deposit', isAuthenticated, (req, res) => {\n    const id = uuidv4();\n    const transaction = {\n        id,\n        text: req.body,\n        status: 'pending',\n        tx_type: 'credit',\n        subtype: 'deposit',\n        created: Date.now(),\n    };\n    req.context.models.topup = transaction;\n    return res.send(transaction);\n});\n\n\n\nrouter.post('/payout', isAuthenticated, (req, res) => {\n    const id = uuidv4();\n    const transaction = {\n        id,\n        text: req.body,\n        status: 'pending',\n        tx_type: 'debit',\n        subtype: 'payout',\n        created: Date.now(),\n    };\n    req.context.models.payout = transaction;\n    return res.send(transaction);\n});\n\n\n\n\nexport default router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1599621391742
  },
  "{\"sourceRoot\":\"/Users/name/dev/betting/src/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/name/dev/betting\",\"filename\":\"/Users/name/dev/betting/src/routes/user.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/name/dev/betting\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/name/dev/betting/src/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/name/dev/betting",
      "filename": "/Users/name/dev/betting/src/routes/user.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/name/dev/betting",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/name/dev/betting/src/routes/user.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/name/dev/betting/src/routes/user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/name/dev/betting/src/routes/",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar jwt = require('express-jwt');\n\nvar jwks = require('jwks-rsa');\n\nvar fetch = require('node-fetch');\n\nvar querystring = require('querystring');\n\nvar router = (0, _express.Router)();\nrouter.get('/', function (req, res) {\n  console.log('body ', req.body);\n  var parsed = querystring.parse(req.url);\n  console.log('Query parameters ', parsed);\n\n  if (parsed === undefined) {\n    res.status(404).send({\n      status: 'Unauthorized',\n      message: \"Missing or invalid API Key. Contact Support !\"\n    });\n  }\n\n  var endpointFeed = 'https://dev-1f5g1j38.eu.auth0.com/oauth/token';\n  var requestConfig = {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: '{\"client_id\":\"7tK31oPWaKGR3tvQoZ6k1XRaWLdKTBlW\",\"client_secret\":\"v-ugp3gHl7GUueev7nUnVu_Ex8KFThhmvODBLLAFckOb5MiXQ8nndf7L_xrUIVPn\",\"audience\":\"https://api.duniapay.net/\",\"grant_type\":\"client_credentials\"}'\n  };\n  fetch(endpointFeed, requestConfig).then(function (res) {\n    return res.json();\n  }).then(function (json) {\n    console.log(json);\n    return res.send(json);\n  })[\"catch\"](function (err) {\n    console.log('error', err);\n    res.status(404).json(err);\n  });\n});\nrouter.get('/:userId', function (req, res) {\n  return res.send(req.context.models.users[req.params.userId]);\n});\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsiand0IiwicmVxdWlyZSIsImp3a3MiLCJmZXRjaCIsInF1ZXJ5c3RyaW5nIiwicm91dGVyIiwiZ2V0IiwicmVxIiwicmVzIiwiY29uc29sZSIsImxvZyIsImJvZHkiLCJwYXJzZWQiLCJwYXJzZSIsInVybCIsInVuZGVmaW5lZCIsInN0YXR1cyIsInNlbmQiLCJtZXNzYWdlIiwiZW5kcG9pbnRGZWVkIiwicmVxdWVzdENvbmZpZyIsIm1ldGhvZCIsImhlYWRlcnMiLCJ0aGVuIiwianNvbiIsImVyciIsImNvbnRleHQiLCJtb2RlbHMiLCJ1c2VycyIsInBhcmFtcyIsInVzZXJJZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUVBOztBQUNBLElBQUlBLEdBQUcsR0FBR0MsT0FBTyxDQUFDLGFBQUQsQ0FBakI7O0FBQ0EsSUFBSUMsSUFBSSxHQUFHRCxPQUFPLENBQUMsVUFBRCxDQUFsQjs7QUFDQSxJQUFNRSxLQUFLLEdBQUdGLE9BQU8sQ0FBQyxZQUFELENBQXJCOztBQUVBLElBQU1HLFdBQVcsR0FBR0gsT0FBTyxDQUFDLGFBQUQsQ0FBM0I7O0FBR0EsSUFBTUksTUFBTSxHQUFHLHNCQUFmO0FBTUFBLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLEdBQVgsRUFBZ0IsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDMUJDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLE9BQVosRUFBcUJILEdBQUcsQ0FBQ0ksSUFBekI7QUFFQSxNQUFJQyxNQUFNLEdBQUdSLFdBQVcsQ0FBQ1MsS0FBWixDQUFrQk4sR0FBRyxDQUFDTyxHQUF0QixDQUFiO0FBQ0FMLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLG1CQUFaLEVBQWlDRSxNQUFqQzs7QUFDQSxNQUFJQSxNQUFNLEtBQUtHLFNBQWYsRUFBMEI7QUFDdEJQLElBQUFBLEdBQUcsQ0FBQ1EsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ2pCRCxNQUFBQSxNQUFNLEVBQUUsY0FEUztBQUVqQkUsTUFBQUEsT0FBTyxFQUFFO0FBRlEsS0FBckI7QUFJSDs7QUFDRCxNQUFJQyxZQUFZLEdBQUcsK0NBQW5CO0FBQ0EsTUFBSUMsYUFBYSxHQUFHO0FBQ2hCQyxJQUFBQSxNQUFNLEVBQUUsTUFEUTtBQUVoQkMsSUFBQUEsT0FBTyxFQUFFO0FBQUUsc0JBQWdCO0FBQWxCLEtBRk87QUFHaEJYLElBQUFBLElBQUksRUFBRTtBQUhVLEdBQXBCO0FBT0FSLEVBQUFBLEtBQUssQ0FBQ2dCLFlBQUQsRUFBZUMsYUFBZixDQUFMLENBRUtHLElBRkwsQ0FFVSxVQUFBZixHQUFHO0FBQUEsV0FBSUEsR0FBRyxDQUFDZ0IsSUFBSixFQUFKO0FBQUEsR0FGYixFQUdLRCxJQUhMLENBR1UsVUFBQUMsSUFBSSxFQUFJO0FBQ1ZmLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZYyxJQUFaO0FBRUEsV0FBT2hCLEdBQUcsQ0FBQ1MsSUFBSixDQUFTTyxJQUFULENBQVA7QUFFSCxHQVJMLFdBV1csVUFBQ0MsR0FBRCxFQUFTO0FBQ1poQixJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxPQUFaLEVBQXFCZSxHQUFyQjtBQUNBakIsSUFBQUEsR0FBRyxDQUFDUSxNQUFKLENBQVcsR0FBWCxFQUFnQlEsSUFBaEIsQ0FBcUJDLEdBQXJCO0FBQ0gsR0FkTDtBQWVILENBbENEO0FBb0NBcEIsTUFBTSxDQUFDQyxHQUFQLENBQVcsVUFBWCxFQUF1QixVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNqQyxTQUFPQSxHQUFHLENBQUNTLElBQUosQ0FBU1YsR0FBRyxDQUFDbUIsT0FBSixDQUFZQyxNQUFaLENBQW1CQyxLQUFuQixDQUF5QnJCLEdBQUcsQ0FBQ3NCLE1BQUosQ0FBV0MsTUFBcEMsQ0FBVCxDQUFQO0FBQ0gsQ0FGRDtlQU1lekIsTSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvbmFtZS9kZXYvYmV0dGluZy9zcmMvcm91dGVzLyIsInNvdXJjZXNDb250ZW50IjpbIlxuXG5pbXBvcnQgeyBSb3V0ZXIgfSBmcm9tICdleHByZXNzJztcbnZhciBqd3QgPSByZXF1aXJlKCdleHByZXNzLWp3dCcpO1xudmFyIGp3a3MgPSByZXF1aXJlKCdqd2tzLXJzYScpO1xuY29uc3QgZmV0Y2ggPSByZXF1aXJlKCdub2RlLWZldGNoJyk7XG5cbmNvbnN0IHF1ZXJ5c3RyaW5nID0gcmVxdWlyZSgncXVlcnlzdHJpbmcnKTtcblxuXG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoKTtcblxuXG5cblxuXG5yb3V0ZXIuZ2V0KCcvJywgKHJlcSwgcmVzKSA9PiB7XG4gICAgY29uc29sZS5sb2coJ2JvZHkgJywgcmVxLmJvZHkpXG5cbiAgICB2YXIgcGFyc2VkID0gcXVlcnlzdHJpbmcucGFyc2UocmVxLnVybClcbiAgICBjb25zb2xlLmxvZygnUXVlcnkgcGFyYW1ldGVycyAnLCBwYXJzZWQpO1xuICAgIGlmIChwYXJzZWQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXMuc3RhdHVzKDQwNCkuc2VuZCh7XG4gICAgICAgICAgICBzdGF0dXM6ICdVbmF1dGhvcml6ZWQnLFxuICAgICAgICAgICAgbWVzc2FnZTogXCJNaXNzaW5nIG9yIGludmFsaWQgQVBJIEtleS4gQ29udGFjdCBTdXBwb3J0ICFcIlxuICAgICAgICB9KVxuICAgIH1cbiAgICBsZXQgZW5kcG9pbnRGZWVkID0gJ2h0dHBzOi8vZGV2LTFmNWcxajM4LmV1LmF1dGgwLmNvbS9vYXV0aC90b2tlbidcbiAgICBsZXQgcmVxdWVzdENvbmZpZyA9IHtcbiAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgIGhlYWRlcnM6IHsgJ2NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyB9LFxuICAgICAgICBib2R5OiAne1wiY2xpZW50X2lkXCI6XCI3dEszMW9QV2FLR1IzdHZRb1o2azFYUmFXTGRLVEJsV1wiLFwiY2xpZW50X3NlY3JldFwiOlwidi11Z3AzZ0hsN0dVdWVldjduVW5WdV9FeDhLRlRoaG12T0RCTExBRmNrT2I1TWlYUThubmRmN0xfeHJVSVZQblwiLFwiYXVkaWVuY2VcIjpcImh0dHBzOi8vYXBpLmR1bmlhcGF5Lm5ldC9cIixcImdyYW50X3R5cGVcIjpcImNsaWVudF9jcmVkZW50aWFsc1wifSdcbiAgICB9O1xuXG5cbiAgICBmZXRjaChlbmRwb2ludEZlZWQsIHJlcXVlc3RDb25maWcpXG5cbiAgICAgICAgLnRoZW4ocmVzID0+IHJlcy5qc29uKCkpXG4gICAgICAgIC50aGVuKGpzb24gPT4ge1xuICAgICAgICAgICAgY29uc29sZS5sb2coanNvbilcblxuICAgICAgICAgICAgcmV0dXJuIHJlcy5zZW5kKGpzb24pO1xuXG4gICAgICAgIH0pXG5cblxuICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ2Vycm9yJywgZXJyKVxuICAgICAgICAgICAgcmVzLnN0YXR1cyg0MDQpLmpzb24oZXJyKVxuICAgICAgICB9KTtcbn0pO1xuXG5yb3V0ZXIuZ2V0KCcvOnVzZXJJZCcsIChyZXEsIHJlcykgPT4ge1xuICAgIHJldHVybiByZXMuc2VuZChyZXEuY29udGV4dC5tb2RlbHMudXNlcnNbcmVxLnBhcmFtcy51c2VySWRdKTtcbn0pO1xuXG5cblxuZXhwb3J0IGRlZmF1bHQgcm91dGVyOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "jwt",
        "require",
        "jwks",
        "fetch",
        "querystring",
        "router",
        "get",
        "req",
        "res",
        "console",
        "log",
        "body",
        "parsed",
        "parse",
        "url",
        "undefined",
        "status",
        "send",
        "message",
        "endpointFeed",
        "requestConfig",
        "method",
        "headers",
        "then",
        "json",
        "err",
        "context",
        "models",
        "users",
        "params",
        "userId"
      ],
      "mappings": ";;;;;;;AAEA;;AACA,IAAIA,GAAG,GAAGC,OAAO,CAAC,aAAD,CAAjB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,UAAD,CAAlB;;AACA,IAAME,KAAK,GAAGF,OAAO,CAAC,YAAD,CAArB;;AAEA,IAAMG,WAAW,GAAGH,OAAO,CAAC,aAAD,CAA3B;;AAGA,IAAMI,MAAM,GAAG,sBAAf;AAMAA,MAAM,CAACC,GAAP,CAAW,GAAX,EAAgB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,GAAG,CAACI,IAAzB;AAEA,MAAIC,MAAM,GAAGR,WAAW,CAACS,KAAZ,CAAkBN,GAAG,CAACO,GAAtB,CAAb;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCE,MAAjC;;AACA,MAAIA,MAAM,KAAKG,SAAf,EAA0B;AACtBP,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBD,MAAAA,MAAM,EAAE,cADS;AAEjBE,MAAAA,OAAO,EAAE;AAFQ,KAArB;AAIH;;AACD,MAAIC,YAAY,GAAG,+CAAnB;AACA,MAAIC,aAAa,GAAG;AAChBC,IAAAA,MAAM,EAAE,MADQ;AAEhBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFO;AAGhBX,IAAAA,IAAI,EAAE;AAHU,GAApB;AAOAR,EAAAA,KAAK,CAACgB,YAAD,EAAeC,aAAf,CAAL,CAEKG,IAFL,CAEU,UAAAf,GAAG;AAAA,WAAIA,GAAG,CAACgB,IAAJ,EAAJ;AAAA,GAFb,EAGKD,IAHL,CAGU,UAAAC,IAAI,EAAI;AACVf,IAAAA,OAAO,CAACC,GAAR,CAAYc,IAAZ;AAEA,WAAOhB,GAAG,CAACS,IAAJ,CAASO,IAAT,CAAP;AAEH,GARL,WAWW,UAACC,GAAD,EAAS;AACZhB,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBe,GAArB;AACAjB,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBQ,IAAhB,CAAqBC,GAArB;AACH,GAdL;AAeH,CAlCD;AAoCApB,MAAM,CAACC,GAAP,CAAW,UAAX,EAAuB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjC,SAAOA,GAAG,CAACS,IAAJ,CAASV,GAAG,CAACmB,OAAJ,CAAYC,MAAZ,CAAmBC,KAAnB,CAAyBrB,GAAG,CAACsB,MAAJ,CAAWC,MAApC,CAAT,CAAP;AACH,CAFD;eAMezB,M",
      "sourceRoot": "/Users/name/dev/betting/src/routes/",
      "sourcesContent": [
        "\n\nimport { Router } from 'express';\nvar jwt = require('express-jwt');\nvar jwks = require('jwks-rsa');\nconst fetch = require('node-fetch');\n\nconst querystring = require('querystring');\n\n\nconst router = Router();\n\n\n\n\n\nrouter.get('/', (req, res) => {\n    console.log('body ', req.body)\n\n    var parsed = querystring.parse(req.url)\n    console.log('Query parameters ', parsed);\n    if (parsed === undefined) {\n        res.status(404).send({\n            status: 'Unauthorized',\n            message: \"Missing or invalid API Key. Contact Support !\"\n        })\n    }\n    let endpointFeed = 'https://dev-1f5g1j38.eu.auth0.com/oauth/token'\n    let requestConfig = {\n        method: 'POST',\n        headers: { 'content-type': 'application/json' },\n        body: '{\"client_id\":\"7tK31oPWaKGR3tvQoZ6k1XRaWLdKTBlW\",\"client_secret\":\"v-ugp3gHl7GUueev7nUnVu_Ex8KFThhmvODBLLAFckOb5MiXQ8nndf7L_xrUIVPn\",\"audience\":\"https://api.duniapay.net/\",\"grant_type\":\"client_credentials\"}'\n    };\n\n\n    fetch(endpointFeed, requestConfig)\n\n        .then(res => res.json())\n        .then(json => {\n            console.log(json)\n\n            return res.send(json);\n\n        })\n\n\n        .catch((err) => {\n            console.log('error', err)\n            res.status(404).json(err)\n        });\n});\n\nrouter.get('/:userId', (req, res) => {\n    return res.send(req.context.models.users[req.params.userId]);\n});\n\n\n\nexport default router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1599625335845
  },
  "{\"sourceRoot\":\"/Users/name/dev/betting/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/name/dev/betting\",\"filename\":\"/Users/name/dev/betting/src/index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/name/dev/betting\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/name/dev/betting/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/name/dev/betting",
      "filename": "/Users/name/dev/betting/src/index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/name/dev/betting",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/name/dev/betting/src/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/name/dev/betting/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/name/dev/betting/src/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "import cors from 'cors';\nimport 'dotenv/config';\nimport express from 'express';\nimport models from './models';\nimport routes from './routes';\nconst app = express(); // * Application-Level Middleware * //\n// Third-Party Middleware\n\napp.use(cors()); // Built-In Middleware\n\napp.use(express.json());\napp.use(express.urlencoded({\n  extended: true\n})); // Custom Middleware\n\napp.use((req, res, next) => {\n  req.context = {\n    models,\n    me: models.users[1]\n  };\n  next();\n}); /// \n\napp.use((req, res, next) => {\n  res.header(\"Access-Control-Allow-Origin\", \"*\");\n  res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept, Authorization\");\n\n  if (req.method === 'OPTIONS') {\n    res.header('Access-Control-Allow-Methods', 'POST, PATCH, GET');\n    return res.status(203).json({});\n  }\n\n  next();\n}); // * Routes * //\n\napp.use('/transactions', routes.transactions);\napp.use('/users', routes.user); // * Start * //\n\napp.listen(process.env.PORT, () => console.log(`Server listening on port ${process.env.PORT}!`));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImNvcnMiLCJleHByZXNzIiwibW9kZWxzIiwicm91dGVzIiwiYXBwIiwidXNlIiwianNvbiIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsInJlcSIsInJlcyIsIm5leHQiLCJjb250ZXh0IiwibWUiLCJ1c2VycyIsImhlYWRlciIsIm1ldGhvZCIsInN0YXR1cyIsInRyYW5zYWN0aW9ucyIsInVzZXIiLCJsaXN0ZW4iLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiJBQUFBLE9BQU9BLElBQVAsTUFBaUIsTUFBakI7QUFDQSxPQUFPLGVBQVA7QUFDQSxPQUFPQyxPQUFQLE1BQW9CLFNBQXBCO0FBQ0EsT0FBT0MsTUFBUCxNQUFtQixVQUFuQjtBQUNBLE9BQU9DLE1BQVAsTUFBbUIsVUFBbkI7QUFJQSxNQUFNQyxHQUFHLEdBQUdILE9BQU8sRUFBbkIsQyxDQUVBO0FBRUE7O0FBRUFHLEdBQUcsQ0FBQ0MsR0FBSixDQUFRTCxJQUFJLEVBQVosRSxDQUVBOztBQUVBSSxHQUFHLENBQUNDLEdBQUosQ0FBUUosT0FBTyxDQUFDSyxJQUFSLEVBQVI7QUFDQUYsR0FBRyxDQUFDQyxHQUFKLENBQVFKLE9BQU8sQ0FBQ00sVUFBUixDQUFtQjtBQUFFQyxFQUFBQSxRQUFRLEVBQUU7QUFBWixDQUFuQixDQUFSLEUsQ0FFQTs7QUFFQUosR0FBRyxDQUFDQyxHQUFKLENBQVEsQ0FBQ0ksR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsS0FBb0I7QUFDeEJGLEVBQUFBLEdBQUcsQ0FBQ0csT0FBSixHQUFjO0FBQ1ZWLElBQUFBLE1BRFU7QUFFVlcsSUFBQUEsRUFBRSxFQUFFWCxNQUFNLENBQUNZLEtBQVAsQ0FBYSxDQUFiO0FBRk0sR0FBZDtBQUlBSCxFQUFBQSxJQUFJO0FBQ1AsQ0FORCxFLENBWUE7O0FBRUFQLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLENBQUNJLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEtBQW9CO0FBQ3hCRCxFQUFBQSxHQUFHLENBQUNLLE1BQUosQ0FBVyw2QkFBWCxFQUEwQyxHQUExQztBQUNBTCxFQUFBQSxHQUFHLENBQUNLLE1BQUosQ0FDSSw4QkFESixFQUVJLCtEQUZKOztBQUlBLE1BQUlOLEdBQUcsQ0FBQ08sTUFBSixLQUFlLFNBQW5CLEVBQThCO0FBQzFCTixJQUFBQSxHQUFHLENBQUNLLE1BQUosQ0FBVyw4QkFBWCxFQUEyQyxrQkFBM0M7QUFDQSxXQUFPTCxHQUFHLENBQUNPLE1BQUosQ0FBVyxHQUFYLEVBQWdCWCxJQUFoQixDQUFxQixFQUFyQixDQUFQO0FBQ0g7O0FBQ0RLLEVBQUFBLElBQUk7QUFDUCxDQVhELEUsQ0FjQTs7QUFFQVAsR0FBRyxDQUFDQyxHQUFKLENBQVEsZUFBUixFQUF5QkYsTUFBTSxDQUFDZSxZQUFoQztBQUNBZCxHQUFHLENBQUNDLEdBQUosQ0FBUSxRQUFSLEVBQWtCRixNQUFNLENBQUNnQixJQUF6QixFLENBS0E7O0FBRUFmLEdBQUcsQ0FBQ2dCLE1BQUosQ0FBV0MsT0FBTyxDQUFDQyxHQUFSLENBQVlDLElBQXZCLEVBQTZCLE1BQ3pCQyxPQUFPLENBQUNDLEdBQVIsQ0FBYSw0QkFBMkJKLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxJQUFLLEdBQXpELENBREoiLCJzb3VyY2VSb290IjoiL1VzZXJzL25hbWUvZGV2L2JldHRpbmcvc3JjLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjb3JzIGZyb20gJ2NvcnMnO1xuaW1wb3J0ICdkb3RlbnYvY29uZmlnJztcbmltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IG1vZGVscyBmcm9tICcuL21vZGVscyc7XG5pbXBvcnQgcm91dGVzIGZyb20gJy4vcm91dGVzJztcblxuXG5cbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcblxuLy8gKiBBcHBsaWNhdGlvbi1MZXZlbCBNaWRkbGV3YXJlICogLy9cblxuLy8gVGhpcmQtUGFydHkgTWlkZGxld2FyZVxuXG5hcHAudXNlKGNvcnMoKSk7XG5cbi8vIEJ1aWx0LUluIE1pZGRsZXdhcmVcblxuYXBwLnVzZShleHByZXNzLmpzb24oKSk7XG5hcHAudXNlKGV4cHJlc3MudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiB0cnVlIH0pKTtcblxuLy8gQ3VzdG9tIE1pZGRsZXdhcmVcblxuYXBwLnVzZSgocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICByZXEuY29udGV4dCA9IHtcbiAgICAgICAgbW9kZWxzLFxuICAgICAgICBtZTogbW9kZWxzLnVzZXJzWzFdLFxuICAgIH07XG4gICAgbmV4dCgpO1xufSk7XG5cblxuXG5cblxuLy8vIFxuXG5hcHAudXNlKChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIHJlcy5oZWFkZXIoXCJBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW5cIiwgXCIqXCIpO1xuICAgIHJlcy5oZWFkZXIoXG4gICAgICAgIFwiQWNjZXNzLUNvbnRyb2wtQWxsb3ctSGVhZGVyc1wiLFxuICAgICAgICBcIk9yaWdpbiwgWC1SZXF1ZXN0ZWQtV2l0aCwgQ29udGVudC1UeXBlLCBBY2NlcHQsIEF1dGhvcml6YXRpb25cIlxuICAgICk7XG4gICAgaWYgKHJlcS5tZXRob2QgPT09ICdPUFRJT05TJykge1xuICAgICAgICByZXMuaGVhZGVyKCdBY2Nlc3MtQ29udHJvbC1BbGxvdy1NZXRob2RzJywgJ1BPU1QsIFBBVENILCBHRVQnKTtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAzKS5qc29uKHt9KTtcbiAgICB9XG4gICAgbmV4dCgpO1xufSlcblxuXG4vLyAqIFJvdXRlcyAqIC8vXG5cbmFwcC51c2UoJy90cmFuc2FjdGlvbnMnLCByb3V0ZXMudHJhbnNhY3Rpb25zKTtcbmFwcC51c2UoJy91c2VycycsIHJvdXRlcy51c2VyKTtcblxuXG5cblxuLy8gKiBTdGFydCAqIC8vXG5cbmFwcC5saXN0ZW4ocHJvY2Vzcy5lbnYuUE9SVCwgKCkgPT5cbiAgICBjb25zb2xlLmxvZyhgU2VydmVyIGxpc3RlbmluZyBvbiBwb3J0ICR7cHJvY2Vzcy5lbnYuUE9SVH0hYCksXG5cbik7Il19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "cors",
        "express",
        "models",
        "routes",
        "app",
        "use",
        "json",
        "urlencoded",
        "extended",
        "req",
        "res",
        "next",
        "context",
        "me",
        "users",
        "header",
        "method",
        "status",
        "transactions",
        "user",
        "listen",
        "process",
        "env",
        "PORT",
        "console",
        "log"
      ],
      "mappings": "AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAO,eAAP;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAIA,MAAMC,GAAG,GAAGH,OAAO,EAAnB,C,CAEA;AAEA;;AAEAG,GAAG,CAACC,GAAJ,CAAQL,IAAI,EAAZ,E,CAEA;;AAEAI,GAAG,CAACC,GAAJ,CAAQJ,OAAO,CAACK,IAAR,EAAR;AACAF,GAAG,CAACC,GAAJ,CAAQJ,OAAO,CAACM,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR,E,CAEA;;AAEAJ,GAAG,CAACC,GAAJ,CAAQ,CAACI,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACxBF,EAAAA,GAAG,CAACG,OAAJ,GAAc;AACVV,IAAAA,MADU;AAEVW,IAAAA,EAAE,EAAEX,MAAM,CAACY,KAAP,CAAa,CAAb;AAFM,GAAd;AAIAH,EAAAA,IAAI;AACP,CAND,E,CAYA;;AAEAP,GAAG,CAACC,GAAJ,CAAQ,CAACI,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACxBD,EAAAA,GAAG,CAACK,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAL,EAAAA,GAAG,CAACK,MAAJ,CACI,8BADJ,EAEI,+DAFJ;;AAIA,MAAIN,GAAG,CAACO,MAAJ,KAAe,SAAnB,EAA8B;AAC1BN,IAAAA,GAAG,CAACK,MAAJ,CAAW,8BAAX,EAA2C,kBAA3C;AACA,WAAOL,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBX,IAAhB,CAAqB,EAArB,CAAP;AACH;;AACDK,EAAAA,IAAI;AACP,CAXD,E,CAcA;;AAEAP,GAAG,CAACC,GAAJ,CAAQ,eAAR,EAAyBF,MAAM,CAACe,YAAhC;AACAd,GAAG,CAACC,GAAJ,CAAQ,QAAR,EAAkBF,MAAM,CAACgB,IAAzB,E,CAKA;;AAEAf,GAAG,CAACgB,MAAJ,CAAWC,OAAO,CAACC,GAAR,CAAYC,IAAvB,EAA6B,MACzBC,OAAO,CAACC,GAAR,CAAa,4BAA2BJ,OAAO,CAACC,GAAR,CAAYC,IAAK,GAAzD,CADJ",
      "sourceRoot": "/Users/name/dev/betting/src/",
      "sourcesContent": [
        "import cors from 'cors';\nimport 'dotenv/config';\nimport express from 'express';\nimport models from './models';\nimport routes from './routes';\n\n\n\nconst app = express();\n\n// * Application-Level Middleware * //\n\n// Third-Party Middleware\n\napp.use(cors());\n\n// Built-In Middleware\n\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\n\n// Custom Middleware\n\napp.use((req, res, next) => {\n    req.context = {\n        models,\n        me: models.users[1],\n    };\n    next();\n});\n\n\n\n\n\n/// \n\napp.use((req, res, next) => {\n    res.header(\"Access-Control-Allow-Origin\", \"*\");\n    res.header(\n        \"Access-Control-Allow-Headers\",\n        \"Origin, X-Requested-With, Content-Type, Accept, Authorization\"\n    );\n    if (req.method === 'OPTIONS') {\n        res.header('Access-Control-Allow-Methods', 'POST, PATCH, GET');\n        return res.status(203).json({});\n    }\n    next();\n})\n\n\n// * Routes * //\n\napp.use('/transactions', routes.transactions);\napp.use('/users', routes.user);\n\n\n\n\n// * Start * //\n\napp.listen(process.env.PORT, () =>\n    console.log(`Server listening on port ${process.env.PORT}!`),\n\n);"
      ]
    },
    "sourceType": "module",
    "mtime": 1599627374367
  },
  "{\"sourceRoot\":\"/Users/name/dev/betting/test/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/name/dev/betting\",\"filename\":\"/Users/name/dev/betting/test/mockfunction.spec.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/name/dev/betting\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/name/dev/betting/test/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/name/dev/betting",
      "filename": "/Users/name/dev/betting/test/mockfunction.spec.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/name/dev/betting",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/name/dev/betting/test/mockfunction.spec.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/name/dev/betting/test/mockfunction.spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/name/dev/betting/test/",
        "sourceFileName": "mockfunction.spec.js"
      }
    },
    "ast": null,
    "code": "var expect = require('chai').expect;\n\nvar sinon = require('sinon'); //import mockMyFunction from './mockito.js';\n\n\ndescribe('callMyFunction function', () => {\n  it('calls the passed function', () => {\n    const callback = spy(); //  mockMyFunction(callback);\n    //expect(callback.called).to.eql(true);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vY2tmdW5jdGlvbi5zcGVjLmpzIl0sIm5hbWVzIjpbImV4cGVjdCIsInJlcXVpcmUiLCJzaW5vbiIsImRlc2NyaWJlIiwiaXQiLCJjYWxsYmFjayIsInNweSJdLCJtYXBwaW5ncyI6IkFBQ0EsSUFBSUEsTUFBTSxHQUFHQyxPQUFPLENBQUMsTUFBRCxDQUFQLENBQWdCRCxNQUE3Qjs7QUFDQSxJQUFJRSxLQUFLLEdBQUdELE9BQU8sQ0FBQyxPQUFELENBQW5CLEMsQ0FDQTs7O0FBR0FFLFFBQVEsQ0FBQyx5QkFBRCxFQUE0QixNQUFNO0FBQ3RDQyxFQUFBQSxFQUFFLENBQUMsMkJBQUQsRUFBOEIsTUFBTTtBQUNsQyxVQUFNQyxRQUFRLEdBQUdDLEdBQUcsRUFBcEIsQ0FEa0MsQ0FHcEM7QUFFRTtBQUNILEdBTkMsQ0FBRjtBQU9ILENBUk8sQ0FBUiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvbmFtZS9kZXYvYmV0dGluZy90ZXN0LyIsInNvdXJjZXNDb250ZW50IjpbIlxudmFyIGV4cGVjdCA9IHJlcXVpcmUoJ2NoYWknKS5leHBlY3Q7XG52YXIgc2lub24gPSByZXF1aXJlKCdzaW5vbicpO1xuLy9pbXBvcnQgbW9ja015RnVuY3Rpb24gZnJvbSAnLi9tb2NraXRvLmpzJztcblxuXG5kZXNjcmliZSgnY2FsbE15RnVuY3Rpb24gZnVuY3Rpb24nLCAoKSA9PiB7XG4gICAgaXQoJ2NhbGxzIHRoZSBwYXNzZWQgZnVuY3Rpb24nLCAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGNhbGxiYWNrID0gc3B5KCk7XG5cbiAgICAgIC8vICBtb2NrTXlGdW5jdGlvbihjYWxsYmFjayk7XG5cbiAgICAgICAgLy9leHBlY3QoY2FsbGJhY2suY2FsbGVkKS50by5lcWwodHJ1ZSk7XG4gICAgfSk7XG59KTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "mockfunction.spec.js"
      ],
      "names": [
        "expect",
        "require",
        "sinon",
        "describe",
        "it",
        "callback",
        "spy"
      ],
      "mappings": "AACA,IAAIA,MAAM,GAAGC,OAAO,CAAC,MAAD,CAAP,CAAgBD,MAA7B;;AACA,IAAIE,KAAK,GAAGD,OAAO,CAAC,OAAD,CAAnB,C,CACA;;;AAGAE,QAAQ,CAAC,yBAAD,EAA4B,MAAM;AACtCC,EAAAA,EAAE,CAAC,2BAAD,EAA8B,MAAM;AAClC,UAAMC,QAAQ,GAAGC,GAAG,EAApB,CADkC,CAGpC;AAEE;AACH,GANC,CAAF;AAOH,CARO,CAAR",
      "sourceRoot": "/Users/name/dev/betting/test/",
      "sourcesContent": [
        "\nvar expect = require('chai').expect;\nvar sinon = require('sinon');\n//import mockMyFunction from './mockito.js';\n\n\ndescribe('callMyFunction function', () => {\n    it('calls the passed function', () => {\n        const callback = spy();\n\n      //  mockMyFunction(callback);\n\n        //expect(callback.called).to.eql(true);\n    });\n});"
      ]
    },
    "sourceType": "module",
    "mtime": 1599660938695
  },
  "{\"sourceRoot\":\"/Users/name/dev/betting/test/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/name/dev/betting\",\"filename\":\"/Users/name/dev/betting/test/transactions.spec.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/name/dev/betting\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/name/dev/betting/test/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/name/dev/betting",
      "filename": "/Users/name/dev/betting/test/transactions.spec.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/name/dev/betting",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/name/dev/betting/test/transactions.spec.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/name/dev/betting/test/transactions.spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/name/dev/betting/test/",
        "sourceFileName": "transactions.spec.js"
      }
    },
    "ast": null,
    "code": "var expect = require('chai').expect;\n\ndescribe('Transaction request with valid Token', () => {\n  it('Can credit user account', () => {// expect(sum(1, 2)).to.eql(3);\n  });\n  it('Can debit user account', () => {// expect(sum(1, 2)).to.eql(3);\n  });\n  it('Should get transactions history', () => {// expect(sum(1, 2)).to.eql(3);\n  });\n  it('Can payout', () => {// expect(sum(1, 2)).to.eql(3);\n  });\n});\ndescribe('Transaction request with invalid Token', () => {\n  it('Cannot credit user account', () => {// expect(sum(1, 2)).to.eql(3);\n  });\n  it('Cannot debit user account', () => {// expect(sum(1, 2)).to.eql(3);\n  });\n  it('Cannot get transactions history', () => {// expect(sum(1, 2)).to.eql(3);\n  });\n  it('Cannot payout', () => {// expect(sum(1, 2)).to.eql(3);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyYW5zYWN0aW9ucy5zcGVjLmpzIl0sIm5hbWVzIjpbImV4cGVjdCIsInJlcXVpcmUiLCJkZXNjcmliZSIsIml0Il0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxNQUFNLEdBQUdDLE9BQU8sQ0FBQyxNQUFELENBQVAsQ0FBZ0JELE1BQTdCOztBQUdBRSxRQUFRLENBQUMsc0NBQUQsRUFBeUMsTUFBTTtBQUNuREMsRUFBQUEsRUFBRSxDQUFDLHlCQUFELEVBQTRCLE1BQU0sQ0FDaEM7QUFDSCxHQUZDLENBQUY7QUFJQUEsRUFBQUEsRUFBRSxDQUFDLHdCQUFELEVBQTJCLE1BQU0sQ0FDL0I7QUFDSCxHQUZDLENBQUY7QUFJQUEsRUFBQUEsRUFBRSxDQUFDLGlDQUFELEVBQW9DLE1BQU0sQ0FDeEM7QUFDSCxHQUZDLENBQUY7QUFJQUEsRUFBQUEsRUFBRSxDQUFDLFlBQUQsRUFBZSxNQUFNLENBQ25CO0FBQ0gsR0FGQyxDQUFGO0FBSUgsQ0FqQk8sQ0FBUjtBQW9CQUQsUUFBUSxDQUFDLHdDQUFELEVBQTJDLE1BQU07QUFDckRDLEVBQUFBLEVBQUUsQ0FBQyw0QkFBRCxFQUErQixNQUFNLENBQ25DO0FBQ0gsR0FGQyxDQUFGO0FBSUFBLEVBQUFBLEVBQUUsQ0FBQywyQkFBRCxFQUE4QixNQUFNLENBQ2xDO0FBQ0gsR0FGQyxDQUFGO0FBSUFBLEVBQUFBLEVBQUUsQ0FBQyxpQ0FBRCxFQUFvQyxNQUFNLENBQ3hDO0FBQ0gsR0FGQyxDQUFGO0FBSUFBLEVBQUFBLEVBQUUsQ0FBQyxlQUFELEVBQWtCLE1BQU0sQ0FDdEI7QUFDSCxHQUZDLENBQUY7QUFHSCxDQWhCTyxDQUFSIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9uYW1lL2Rldi9iZXR0aW5nL3Rlc3QvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGV4cGVjdCA9IHJlcXVpcmUoJ2NoYWknKS5leHBlY3Q7XG5cblxuZGVzY3JpYmUoJ1RyYW5zYWN0aW9uIHJlcXVlc3Qgd2l0aCB2YWxpZCBUb2tlbicsICgpID0+IHtcbiAgICBpdCgnQ2FuIGNyZWRpdCB1c2VyIGFjY291bnQnLCAoKSA9PiB7XG4gICAgICAgIC8vIGV4cGVjdChzdW0oMSwgMikpLnRvLmVxbCgzKTtcbiAgICB9KTtcblxuICAgIGl0KCdDYW4gZGViaXQgdXNlciBhY2NvdW50JywgKCkgPT4ge1xuICAgICAgICAvLyBleHBlY3Qoc3VtKDEsIDIpKS50by5lcWwoMyk7XG4gICAgfSk7XG5cbiAgICBpdCgnU2hvdWxkIGdldCB0cmFuc2FjdGlvbnMgaGlzdG9yeScsICgpID0+IHtcbiAgICAgICAgLy8gZXhwZWN0KHN1bSgxLCAyKSkudG8uZXFsKDMpO1xuICAgIH0pO1xuXG4gICAgaXQoJ0NhbiBwYXlvdXQnLCAoKSA9PiB7XG4gICAgICAgIC8vIGV4cGVjdChzdW0oMSwgMikpLnRvLmVxbCgzKTtcbiAgICB9KTtcblxufSk7XG5cblxuZGVzY3JpYmUoJ1RyYW5zYWN0aW9uIHJlcXVlc3Qgd2l0aCBpbnZhbGlkIFRva2VuJywgKCkgPT4ge1xuICAgIGl0KCdDYW5ub3QgY3JlZGl0IHVzZXIgYWNjb3VudCcsICgpID0+IHtcbiAgICAgICAgLy8gZXhwZWN0KHN1bSgxLCAyKSkudG8uZXFsKDMpO1xuICAgIH0pO1xuXG4gICAgaXQoJ0Nhbm5vdCBkZWJpdCB1c2VyIGFjY291bnQnLCAoKSA9PiB7XG4gICAgICAgIC8vIGV4cGVjdChzdW0oMSwgMikpLnRvLmVxbCgzKTtcbiAgICB9KTtcblxuICAgIGl0KCdDYW5ub3QgZ2V0IHRyYW5zYWN0aW9ucyBoaXN0b3J5JywgKCkgPT4ge1xuICAgICAgICAvLyBleHBlY3Qoc3VtKDEsIDIpKS50by5lcWwoMyk7XG4gICAgfSk7XG5cbiAgICBpdCgnQ2Fubm90IHBheW91dCcsICgpID0+IHtcbiAgICAgICAgLy8gZXhwZWN0KHN1bSgxLCAyKSkudG8uZXFsKDMpO1xuICAgIH0pO1xufSk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "transactions.spec.js"
      ],
      "names": [
        "expect",
        "require",
        "describe",
        "it"
      ],
      "mappings": "AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,MAAD,CAAP,CAAgBD,MAA7B;;AAGAE,QAAQ,CAAC,sCAAD,EAAyC,MAAM;AACnDC,EAAAA,EAAE,CAAC,yBAAD,EAA4B,MAAM,CAChC;AACH,GAFC,CAAF;AAIAA,EAAAA,EAAE,CAAC,wBAAD,EAA2B,MAAM,CAC/B;AACH,GAFC,CAAF;AAIAA,EAAAA,EAAE,CAAC,iCAAD,EAAoC,MAAM,CACxC;AACH,GAFC,CAAF;AAIAA,EAAAA,EAAE,CAAC,YAAD,EAAe,MAAM,CACnB;AACH,GAFC,CAAF;AAIH,CAjBO,CAAR;AAoBAD,QAAQ,CAAC,wCAAD,EAA2C,MAAM;AACrDC,EAAAA,EAAE,CAAC,4BAAD,EAA+B,MAAM,CACnC;AACH,GAFC,CAAF;AAIAA,EAAAA,EAAE,CAAC,2BAAD,EAA8B,MAAM,CAClC;AACH,GAFC,CAAF;AAIAA,EAAAA,EAAE,CAAC,iCAAD,EAAoC,MAAM,CACxC;AACH,GAFC,CAAF;AAIAA,EAAAA,EAAE,CAAC,eAAD,EAAkB,MAAM,CACtB;AACH,GAFC,CAAF;AAGH,CAhBO,CAAR",
      "sourceRoot": "/Users/name/dev/betting/test/",
      "sourcesContent": [
        "var expect = require('chai').expect;\n\n\ndescribe('Transaction request with valid Token', () => {\n    it('Can credit user account', () => {\n        // expect(sum(1, 2)).to.eql(3);\n    });\n\n    it('Can debit user account', () => {\n        // expect(sum(1, 2)).to.eql(3);\n    });\n\n    it('Should get transactions history', () => {\n        // expect(sum(1, 2)).to.eql(3);\n    });\n\n    it('Can payout', () => {\n        // expect(sum(1, 2)).to.eql(3);\n    });\n\n});\n\n\ndescribe('Transaction request with invalid Token', () => {\n    it('Cannot credit user account', () => {\n        // expect(sum(1, 2)).to.eql(3);\n    });\n\n    it('Cannot debit user account', () => {\n        // expect(sum(1, 2)).to.eql(3);\n    });\n\n    it('Cannot get transactions history', () => {\n        // expect(sum(1, 2)).to.eql(3);\n    });\n\n    it('Cannot payout', () => {\n        // expect(sum(1, 2)).to.eql(3);\n    });\n});"
      ]
    },
    "sourceType": "module",
    "mtime": 1599661397497
  },
  "{\"sourceRoot\":\"/Users/name/dev/betting/test/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/name/dev/betting\",\"filename\":\"/Users/name/dev/betting/test/users.spec.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/name/dev/betting\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/name/dev/betting/test/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/name/dev/betting",
      "filename": "/Users/name/dev/betting/test/users.spec.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/name/dev/betting",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/name/dev/betting/test/users.spec.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/name/dev/betting/test/users.spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/name/dev/betting/test/",
        "sourceFileName": "users.spec.js"
      }
    },
    "ast": null,
    "code": "describe('account endpoints with valid Token', () => {\n  it('Can request token', () => {// expect(sum(1, 2)).to.eql(3);\n  });\n  it('Should receive account balance', () => {// expect(sum(1, 2)).to.eql(3);\n  });\n  it('Should receive user acccount details', () => {// expect(sum(1, 2)).to.eql(3);\n  });\n});\ndescribe('account endpoints with invalid Token', () => {\n  it('Cannot request token', () => {// expect(sum(1, 2)).to.eql(3);\n  });\n  it('Should not receive account balance', () => {// expect(sum(1, 2)).to.eql(3);\n  });\n  it('Should not acccess user acccount details', () => {// expect(sum(1, 2)).to.eql(3);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLnNwZWMuanMiXSwibmFtZXMiOlsiZGVzY3JpYmUiLCJpdCJdLCJtYXBwaW5ncyI6IkFBRUFBLFFBQVEsQ0FBQyxvQ0FBRCxFQUF1QyxNQUFNO0FBQ2pEQyxFQUFBQSxFQUFFLENBQUMsbUJBQUQsRUFBc0IsTUFBTSxDQUMxQjtBQUNILEdBRkMsQ0FBRjtBQUlBQSxFQUFBQSxFQUFFLENBQUMsZ0NBQUQsRUFBbUMsTUFBTSxDQUN2QztBQUNILEdBRkMsQ0FBRjtBQUlBQSxFQUFBQSxFQUFFLENBQUMsc0NBQUQsRUFBeUMsTUFBTSxDQUM3QztBQUNILEdBRkMsQ0FBRjtBQUdILENBWk8sQ0FBUjtBQWVBRCxRQUFRLENBQUMsc0NBQUQsRUFBeUMsTUFBTTtBQUNuREMsRUFBQUEsRUFBRSxDQUFDLHNCQUFELEVBQXlCLE1BQU0sQ0FDN0I7QUFDSCxHQUZDLENBQUY7QUFJQUEsRUFBQUEsRUFBRSxDQUFDLG9DQUFELEVBQXVDLE1BQU0sQ0FDM0M7QUFDSCxHQUZDLENBQUY7QUFJQUEsRUFBQUEsRUFBRSxDQUFDLDBDQUFELEVBQTZDLE1BQU0sQ0FDakQ7QUFDSCxHQUZDLENBQUY7QUFHSCxDQVpPLENBQVIiLCJzb3VyY2VSb290IjoiL1VzZXJzL25hbWUvZGV2L2JldHRpbmcvdGVzdC8iLCJzb3VyY2VzQ29udGVudCI6WyJcblxuZGVzY3JpYmUoJ2FjY291bnQgZW5kcG9pbnRzIHdpdGggdmFsaWQgVG9rZW4nLCAoKSA9PiB7XG4gICAgaXQoJ0NhbiByZXF1ZXN0IHRva2VuJywgKCkgPT4ge1xuICAgICAgICAvLyBleHBlY3Qoc3VtKDEsIDIpKS50by5lcWwoMyk7XG4gICAgfSk7XG5cbiAgICBpdCgnU2hvdWxkIHJlY2VpdmUgYWNjb3VudCBiYWxhbmNlJywgKCkgPT4ge1xuICAgICAgICAvLyBleHBlY3Qoc3VtKDEsIDIpKS50by5lcWwoMyk7XG4gICAgfSk7XG5cbiAgICBpdCgnU2hvdWxkIHJlY2VpdmUgdXNlciBhY2Njb3VudCBkZXRhaWxzJywgKCkgPT4ge1xuICAgICAgICAvLyBleHBlY3Qoc3VtKDEsIDIpKS50by5lcWwoMyk7XG4gICAgfSk7XG59KTtcblxuXG5kZXNjcmliZSgnYWNjb3VudCBlbmRwb2ludHMgd2l0aCBpbnZhbGlkIFRva2VuJywgKCkgPT4ge1xuICAgIGl0KCdDYW5ub3QgcmVxdWVzdCB0b2tlbicsICgpID0+IHtcbiAgICAgICAgLy8gZXhwZWN0KHN1bSgxLCAyKSkudG8uZXFsKDMpO1xuICAgIH0pO1xuXG4gICAgaXQoJ1Nob3VsZCBub3QgcmVjZWl2ZSBhY2NvdW50IGJhbGFuY2UnLCAoKSA9PiB7XG4gICAgICAgIC8vIGV4cGVjdChzdW0oMSwgMikpLnRvLmVxbCgzKTtcbiAgICB9KTtcblxuICAgIGl0KCdTaG91bGQgbm90IGFjY2Nlc3MgdXNlciBhY2Njb3VudCBkZXRhaWxzJywgKCkgPT4ge1xuICAgICAgICAvLyBleHBlY3Qoc3VtKDEsIDIpKS50by5lcWwoMyk7XG4gICAgfSk7XG59KTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "users.spec.js"
      ],
      "names": [
        "describe",
        "it"
      ],
      "mappings": "AAEAA,QAAQ,CAAC,oCAAD,EAAuC,MAAM;AACjDC,EAAAA,EAAE,CAAC,mBAAD,EAAsB,MAAM,CAC1B;AACH,GAFC,CAAF;AAIAA,EAAAA,EAAE,CAAC,gCAAD,EAAmC,MAAM,CACvC;AACH,GAFC,CAAF;AAIAA,EAAAA,EAAE,CAAC,sCAAD,EAAyC,MAAM,CAC7C;AACH,GAFC,CAAF;AAGH,CAZO,CAAR;AAeAD,QAAQ,CAAC,sCAAD,EAAyC,MAAM;AACnDC,EAAAA,EAAE,CAAC,sBAAD,EAAyB,MAAM,CAC7B;AACH,GAFC,CAAF;AAIAA,EAAAA,EAAE,CAAC,oCAAD,EAAuC,MAAM,CAC3C;AACH,GAFC,CAAF;AAIAA,EAAAA,EAAE,CAAC,0CAAD,EAA6C,MAAM,CACjD;AACH,GAFC,CAAF;AAGH,CAZO,CAAR",
      "sourceRoot": "/Users/name/dev/betting/test/",
      "sourcesContent": [
        "\n\ndescribe('account endpoints with valid Token', () => {\n    it('Can request token', () => {\n        // expect(sum(1, 2)).to.eql(3);\n    });\n\n    it('Should receive account balance', () => {\n        // expect(sum(1, 2)).to.eql(3);\n    });\n\n    it('Should receive user acccount details', () => {\n        // expect(sum(1, 2)).to.eql(3);\n    });\n});\n\n\ndescribe('account endpoints with invalid Token', () => {\n    it('Cannot request token', () => {\n        // expect(sum(1, 2)).to.eql(3);\n    });\n\n    it('Should not receive account balance', () => {\n        // expect(sum(1, 2)).to.eql(3);\n    });\n\n    it('Should not acccess user acccount details', () => {\n        // expect(sum(1, 2)).to.eql(3);\n    });\n});\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1599661346652
  }
}